name: Deploy to Swarm

on:
  workflow_dispatch:
  repository_dispatch:
    types: [trigger-deploy]
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Get latest image tags
      id: get_tags
      run: |
        TAG1=$(docker run --rm ghcr.io/${{ github.repository_owner }}/test-back:latest cat /app/VERSION)
        echo "::set-output name=test-back_tag::${TAG1}"
        TAG2=$(docker run --rm ghcr.io/${{ github.repository_owner }}/test-front:latest cat /app/VERSION)
        echo "::set-output name=test-front_tag::${TAG2}"
        TAG3=$(docker run --rm ghcr.io/${{ github.repository_owner }}/test-network:latest cat /etc/nginx/VERSION)
        echo "::set-output name=test-network_tag::${TAG3}"

    - name: Remove old image versions
      run: |
        echo "Removing old image versions..."
        docker image rm $(docker image ls ghcr.io/${{ github.repository_owner }}/test-back --format '{{.ID}}' | tail -n +4) || true
        docker image rm $(docker image ls ghcr.io/${{ github.repository_owner }}/test-front --format '{{.ID}}' | tail -n +4) || true
        docker image rm $(docker image ls ghcr.io/${{ github.repository_owner }}/test-network --format '{{.ID}}' | tail -n +4) || true

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          # Stop and remove old containers
          docker stop test-back || true
          docker rm test-back || true
          docker stop test-front || true
          docker rm test-front || true
          docker stop test-network || true
          docker rm test-network || true

          # Pull the latest images
          docker pull ghcr.io/${{ github.repository_owner }}/test-back:${{ steps.get_tags.outputs.test-back_tag }}
          docker pull ghcr.io/${{ github.repository_owner }}/test-front:${{ steps.get_tags.outputs.test-front_tag }}
          docker pull ghcr.io/${{ github.repository_owner }}/test-network:${{ steps.get_tags.outputs.test-network_tag }}

          # Start new containers
          docker network create test-net --attachable || true

          docker run -d --name test-back --network test-net ghcr.io/${{ github.repository_owner }}/test-back:${{ steps.get_tags.outputs.test-back_tag }}
          docker run -d --name test-front --network test-net ghcr.io/${{ github.repository_owner }}/test-front:${{ steps.get_tags.outputs.test-front_tag }}
          docker run -d --name test-network --network test-net -p 80:80 ghcr.io/${{ github.repository_owner }}/test-network:${{ steps.get_tags.outputs.test-network_tag }}
#           docker pull ghcr.io/${{ github.repository_owner }}/test-back:${{ steps.get_tags.outputs.test-back_tag }}
#           docker pull ghcr.io/${{ github.repository_owner }}/test-front:${{ steps.get_tags.outputs.test-front_tag }}
#           docker pull ghcr.io/${{ github.repository_owner }}/test-network:${{ steps.get_tags.outputs.test-network_tag }}
          
#           docker service update --image ghcr.io/${{ github.repository_owner }}/test-back:${{ steps.get_tags.outputs.test-back_tag }} test-back || docker service create --name test-back --network test-net --replicas 1 ghcr.io/${{ github.repository_owner }}/test-back:${{ steps.get_tags.outputs.test-back_tag }}
#           docker service update --image ghcr.io/${{ github.repository_owner }}/test-front:${{ steps.get_tags.outputs.test-front_tag }} test-front || docker service create --name test-front --network test-net --replicas 1 ghcr.io/${{ github.repository_owner }}/test-front:${{ steps.get_tags.outputs.test-front_tag }}
#           docker service update --image ghcr.io/${{ github.repository_owner }}/test-network:${{ steps.get_tags.outputs.test-network_tag }} test-network || docker service create --name test-network --network test-net --publish 80:80 --replicas 1 ghcr.io/${{ github.repository_owner }}/test-network:${{ steps.get_tags.outputs.test-network_tag }}



# docker service update --image ghcr.io/zawert879/test-back:ca0157c test-back || docker service create --name test-back --network test-net --replicas 1 ghcr.io/zawert879/test-back:ca0157c
# docker service update --image ghcr.io/zawert879/test-front:272a1f7 test-front || docker service create --name test-front --network test-net --replicas 1 ghcr.io/zawert879/test-front:272a1f7
# docker service update --image ghcr.io/zawert879/test-network:46e84bf test-network || docker service create --name test-network --network test-net --publish 80:80 --replicas 1 ghcr.io/zawert879/test-network:46e84bf
